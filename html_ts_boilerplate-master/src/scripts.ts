import axios, { Axios } from 'axios';

const songWrapper = document.querySelector('.js-song-wrapper');

type Song = {
    id: number;
    name: string;
    performer: string;
    description: string;
    releaseYear: number;
    createdAt: string;
    image: string;
}

function getRandomImage() {
  // declare an array
  const randomImage = [];

  // insert the URL of images in array
  randomImage[0] = 'assets/images/andrew-slifkin-Ye1Aw2cBBBI-unsplash.jpg';
  randomImage[1] = 'assets/images/gary-ellis-s0_B1to21_k-unsplash.jpg';
  randomImage[2] = 'assets/images/jonathan-kemper-zE612_hD6GI-unsplash.jpg';
  randomImage[3] = 'assets/images/kian-lem-pH_1KmQJ140-unsplash.jpg';
  randomImage[4] = 'assets/images/luca-calderone-3eQw8AmZJAo-unsplash.jpg';
  randomImage[5] = 'assets/images/martin-bekerman-lqrXJ4VWraw-unsplash.jpg';
  randomImage[6] = 'assets/images/mathias-konrath-Y7BG6yO9Q9o-unsplash.jpg';
  randomImage[7] = 'assets/images/szymon-fischer-vyNBFUbSsbs-unsplash.jpg';
  randomImage[8] = 'assets/images/tim-rebkavets-B5PNmw5XSpk-unsplash.jpg';
  randomImage[9] = 'assets/images/willian-justen-de-vasconcellos-Cdb3-cWZBeo-unsplash.jpg';

  // generate a number
  const number = Math.floor(Math.random() * randomImage.length);

  // return the images generated by number
  return randomImage[number];
}

// Timer that display how long ago the card was made

const timerBetweenCreaton = (time: Date) => {
  const currentTime = new Date();
  const nextTime = new Date(time);
  const timeDifference = Number(currentTime) - Number(nextTime);

  const seconds = Math.floor(timeDifference / 1000);
  const minutes = Math.floor(seconds / 60);
  const hours = Math.floor(minutes / 60);
  const days = Math.floor(hours / 24);

  let timeAgoPublished = '';

  if (days > 0) {
    timeAgoPublished = `Created ${days} days ago`;
  } else if (hours > 0) {
    timeAgoPublished = `Created ${hours} hours ago`;
  } else if (minutes > 0) {
    timeAgoPublished = `Created ${minutes} minutes ago`;
  } else {
    timeAgoPublished = `Created ${seconds} seconds ago`;
  }
  return timeAgoPublished;
};

const createSongCard = () => {
  const songs = axios.get<Song[]>('http://localhost:3004/songs');

  songWrapper.innerHTML = '';

  songs.then(({ data }) => {
    data.forEach((song) => {
      // Each song card gets their individual timer created inside a loop
      const timeAgo = timerBetweenCreaton(new Date(song.createdAt));

      songWrapper.innerHTML += `
              <div class="song">
                  <img src="${song.image}" alt="Song Image" class="images"/>
                  <h1 class="title">${song.name}</h1>
                  <h3 class="performer">${song.performer}</h3>
                  <h5 class="description">${song.description}</h5>
                  <h6 class="releaseYear">${song.releaseYear}</h6>
                  <button class="js-song-delete song__delete" data-song-id="${song.id}">Delete</button>
                  <h6 class="createdAt">${timeAgo}</h6>
              </div>
              `;
    });

    const songDeleteButtons = document.querySelectorAll<HTMLButtonElement>('.js-song-delete');

    songDeleteButtons.forEach((songButton) => {
      songButton.addEventListener('click', () => {
        const { songId } = songButton.dataset;

        axios.delete(`http://localhost:3004/songs/${songId}`).then(() => {
          createSongCard();
        });
      });
    });
  });
};

createSongCard();

const songForm = document.querySelector('.js-song-form');

songForm.addEventListener('submit', (event) => {
  event.preventDefault();

  const songInput = songForm.querySelector<HTMLInputElement>('input[name="song"]');
  const songInputValue = songInput.value;

  const performerInput = songForm.querySelector<HTMLInputElement>('input[name="performer"]');
  const performerInputValue = performerInput.value;

  const descriptionInput = songForm.querySelector<HTMLInputElement>('input[name="description"]');
  const descriptionInputValue = descriptionInput.value;

  const releaseYearInput = songForm.querySelector<HTMLInputElement>('input[name="releaseYear"]');
  const releaseYearInputValue = releaseYearInput.value;

  axios.post('http://localhost:3004/songs', {
    name: songInputValue,
    performer: performerInputValue,
    description: descriptionInputValue,
    releaseYear: releaseYearInputValue,
    image: getRandomImage(),
    createdAt: new Date().toISOString(), // Use ISO format for createdAt commonly used by timestamps
  }).then(() => {
    songInput.value = '';
    performerInput.value = '';
    descriptionInput.value = '';
    releaseYearInput.value = '';

    createSongCard();
  });
});
